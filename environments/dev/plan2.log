[0m[1mmodule.eventbridge.data.archive_file.lambda_zip: Reading...[0m[0m
[0m[1mmodule.eventbridge.data.archive_file.lambda_zip: Read complete after 0s [id=aea7b4d8fc2d23778dbb5b96f49f08cae125ce76][0m
[0m[1mmodule.eventbridge.null_resource.lambda_trigger: Refreshing state... [id=8759810819496368802][0m
[0m[1mmodule.eventbridge.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.eventbridge.aws_cloudwatch_event_rule.health_events: Refreshing state... [id=dev-health-event-notifications][0m
[0m[1mmodule.resource_groups.aws_resourcegroups_group.health_notifications: Refreshing state... [id=dev-health-notifications][0m
[0m[1mmodule.eventbridge.data.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mmodule.sns.aws_sns_topic.health_events: Refreshing state... [id=arn:aws:sns:us-east-1:600424110307:dev-health-event-notifications][0m
[0m[1mmodule.eventbridge.aws_iam_role.lambda_role: Refreshing state... [id=dev-health-formatter-role][0m
[0m[1mmodule.sns.aws_sns_topic_policy.default: Refreshing state... [id=arn:aws:sns:us-east-1:600424110307:dev-health-event-notifications][0m
[0m[1mmodule.eventbridge.aws_iam_role_policy.lambda_logs_policy: Refreshing state... [id=dev-health-formatter-role:dev-health-formatter-logs-policy][0m
[0m[1mmodule.eventbridge.aws_iam_role_policy.lambda_sns_policy: Refreshing state... [id=dev-health-formatter-role:dev-health-formatter-sns-policy][0m
[0m[1mmodule.eventbridge.aws_lambda_function.health_formatter: Refreshing state... [id=dev-health-event-formatter][0m
[0m[1mmodule.eventbridge.aws_lambda_permission.allow_eventbridge: Refreshing state... [id=AllowExecutionFromEventBridge][0m
[0m[1mmodule.eventbridge.aws_cloudwatch_event_target.lambda_target: Refreshing state... [id=dev-health-event-notifications-HealthEventLambdaTarget][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [33m~[0m update in-place[0m
[31m-[0m/[32m+[0m destroy and then create replacement[0m

Terraform will perform the following actions:

[1m  # module.eventbridge.aws_cloudwatch_event_rule.health_events[0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_cloudwatch_event_rule" "health_events" {
        id                  = "dev-health-event-notifications"
        name                = "dev-health-event-notifications"
      [33m~[0m[0m tags                = {
          [32m+[0m[0m "Application"       = "aws-health-notifications"
          [32m+[0m[0m "Backup"            = "false"
          [32m+[0m[0m "Compliance"        = "none"
            "CostCenter"        = "platform-engineering"
            "CreatedBy"         = "terraform-aws-health-notification"
          [32m+[0m[0m "Criticality"       = "medium"
            "Environment"       = "dev"
          [31m-[0m[0m "GithubRepo"        = "awshealthnotification" [90m-> null[0m[0m
            "ManagedBy"         = "terraform"
            "Owner"             = "platform-team"
            "Project"           = "health-monitoring"
            "Service"           = "aws-health-notifications"
            "TerraformRepo"     = "github.com/xman/aws-health-notifications"
            "TerraformWorkflow" = "github-actions"
        }
      [33m~[0m[0m tags_all            = {
          [32m+[0m[0m "Application"       = "aws-health-notifications"
          [32m+[0m[0m "Backup"            = "false"
          [32m+[0m[0m "Compliance"        = "none"
          [32m+[0m[0m "Criticality"       = "medium"
          [31m-[0m[0m "GithubRepo"        = "awshealthnotification" [90m-> null[0m[0m
            [90m# (9 unchanged elements hidden)[0m[0m
        }
        [90m# (10 unchanged attributes hidden)[0m[0m
    }

[1m  # module.eventbridge.aws_iam_role.lambda_role[0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_iam_role" "lambda_role" {
        id                    = "dev-health-formatter-role"
        name                  = "dev-health-formatter-role"
      [33m~[0m[0m tags                  = {
          [32m+[0m[0m "Application"       = "aws-health-notifications"
          [32m+[0m[0m "Backup"            = "false"
          [32m+[0m[0m "Compliance"        = "none"
            "CostCenter"        = "platform-engineering"
            "CreatedBy"         = "terraform-aws-health-notification"
          [32m+[0m[0m "Criticality"       = "medium"
            "Environment"       = "dev"
          [31m-[0m[0m "GithubRepo"        = "awshealthnotification" [90m-> null[0m[0m
            "ManagedBy"         = "terraform"
            "Name"              = "dev-health-formatter-role"
            "Owner"             = "platform-team"
            "Project"           = "health-monitoring"
            "Role"              = "lambda-execution"
            "Service"           = "aws-health-notifications"
            "TerraformRepo"     = "github.com/xman/aws-health-notifications"
            "TerraformWorkflow" = "github-actions"
        }
      [33m~[0m[0m tags_all              = {
          [32m+[0m[0m "Application"       = "aws-health-notifications"
          [32m+[0m[0m "Backup"            = "false"
          [32m+[0m[0m "Compliance"        = "none"
          [32m+[0m[0m "Criticality"       = "medium"
          [31m-[0m[0m "GithubRepo"        = "awshealthnotification" [90m-> null[0m[0m
            [90m# (11 unchanged elements hidden)[0m[0m
        }
        [90m# (11 unchanged attributes hidden)[0m[0m

        [90m# (2 unchanged blocks hidden)[0m[0m
    }

[1m  # module.eventbridge.aws_lambda_function.health_formatter[0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_lambda_function" "health_formatter" {
        id                             = "dev-health-event-formatter"
      [33m~[0m[0m last_modified                  = "2025-05-28T03:43:57.000+0000" -> (known after apply)
      [33m~[0m[0m qualified_arn                  = "arn:aws:lambda:us-east-1:600424110307:function:dev-health-event-formatter:1" -> (known after apply)
      [33m~[0m[0m qualified_invoke_arn           = "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:600424110307:function:dev-health-event-formatter:1/invocations" -> (known after apply)
      [33m~[0m[0m source_code_hash               = "jBP6O0HDF1C3skdYmSV8YEse3u18RokgVzOPufpNmoY=" [33m->[0m[0m "6hkArzqDJIiSBMUNcd9An+LccUJl9ylTZqRgjDsMyYs="
      [33m~[0m[0m tags                           = {
          [32m+[0m[0m "Application"       = "aws-health-notifications"
          [32m+[0m[0m "Backup"            = "false"
          [32m+[0m[0m "Compliance"        = "none"
            "CostCenter"        = "platform-engineering"
            "CreatedBy"         = "terraform-aws-health-notification"
          [32m+[0m[0m "Criticality"       = "medium"
            "Environment"       = "dev"
            "Function"          = "event-formatting"
          [31m-[0m[0m "GithubRepo"        = "awshealthnotification" [90m-> null[0m[0m
            "ManagedBy"         = "terraform"
            "Name"              = "dev-health-event-formatter"
            "Owner"             = "platform-team"
            "Project"           = "health-monitoring"
            "Service"           = "aws-health-notifications"
            "TerraformRepo"     = "github.com/xman/aws-health-notifications"
            "TerraformWorkflow" = "github-actions"
        }
      [33m~[0m[0m tags_all                       = {
          [32m+[0m[0m "Application"       = "aws-health-notifications"
          [32m+[0m[0m "Backup"            = "false"
          [32m+[0m[0m "Compliance"        = "none"
          [32m+[0m[0m "Criticality"       = "medium"
          [31m-[0m[0m "GithubRepo"        = "awshealthnotification" [90m-> null[0m[0m
            [90m# (11 unchanged elements hidden)[0m[0m
        }
      [33m~[0m[0m version                        = "1" -> (known after apply)
        [90m# (23 unchanged attributes hidden)[0m[0m

        [90m# (4 unchanged blocks hidden)[0m[0m
    }

[1m  # module.eventbridge.null_resource.lambda_trigger[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "null_resource" "lambda_trigger" {
      [33m~[0m[0m id       = "8759810819496368802" -> (known after apply)
      [33m~[0m[0m triggers = { [31m# forces replacement[0m[0m
          [33m~[0m[0m "source_code_hash" = "jBP6O0HDF1C3skdYmSV8YEse3u18RokgVzOPufpNmoY=" [33m->[0m[0m "6hkArzqDJIiSBMUNcd9An+LccUJl9ylTZqRgjDsMyYs="
            [90m# (1 unchanged element hidden)[0m[0m
        }
    }

[1m  # module.resource_groups.aws_resourcegroups_group.health_notifications[0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_resourcegroups_group" "health_notifications" {
        id          = "dev-health-notifications"
        name        = "dev-health-notifications"
      [33m~[0m[0m tags        = {
          [32m+[0m[0m "Application"       = "aws-health-notifications"
          [32m+[0m[0m "Backup"            = "false"
          [32m+[0m[0m "Compliance"        = "none"
            "CostCenter"        = "platform-engineering"
            "CreatedBy"         = "terraform-aws-health-notification"
          [32m+[0m[0m "Criticality"       = "medium"
            "Environment"       = "dev"
          [31m-[0m[0m "GithubRepo"        = "awshealthnotification" [90m-> null[0m[0m
            "ManagedBy"         = "terraform"
            "Name"              = "dev-health-notifications-resource-group"
            "Owner"             = "platform-team"
            "Project"           = "health-monitoring"
            "Service"           = "aws-health-notifications"
            "TerraformRepo"     = "github.com/xman/aws-health-notifications"
            "TerraformWorkflow" = "github-actions"
        }
      [33m~[0m[0m tags_all    = {
          [32m+[0m[0m "Application"       = "aws-health-notifications"
          [32m+[0m[0m "Backup"            = "false"
          [32m+[0m[0m "Compliance"        = "none"
          [32m+[0m[0m "Criticality"       = "medium"
          [31m-[0m[0m "GithubRepo"        = "awshealthnotification" [90m-> null[0m[0m
            [90m# (10 unchanged elements hidden)[0m[0m
        }
        [90m# (2 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1m  # module.sns.aws_sns_topic.health_events[0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_sns_topic" "health_events" {
        id                                       = "arn:aws:sns:us-east-1:600424110307:dev-health-event-notifications"
        name                                     = "dev-health-event-notifications"
      [33m~[0m[0m tags                                     = {
          [32m+[0m[0m "Application"       = "aws-health-notifications"
          [32m+[0m[0m "Backup"            = "false"
          [32m+[0m[0m "Compliance"        = "none"
            "CostCenter"        = "platform-engineering"
            "CreatedBy"         = "terraform-aws-health-notification"
          [32m+[0m[0m "Criticality"       = "medium"
            "Environment"       = "dev"
          [31m-[0m[0m "GithubRepo"        = "awshealthnotification" [90m-> null[0m[0m
            "ManagedBy"         = "terraform"
            "Name"              = "dev-health-event-notifications"
            "Owner"             = "platform-team"
            "Project"           = "health-monitoring"
            "Service"           = "notifications"
            "TerraformRepo"     = "github.com/xman/aws-health-notifications"
            "TerraformWorkflow" = "github-actions"
        }
      [33m~[0m[0m tags_all                                 = {
          [32m+[0m[0m "Application"       = "aws-health-notifications"
          [32m+[0m[0m "Backup"            = "false"
          [32m+[0m[0m "Compliance"        = "none"
          [32m+[0m[0m "Criticality"       = "medium"
          [31m-[0m[0m "GithubRepo"        = "awshealthnotification" [90m-> null[0m[0m
            [90m# (10 unchanged elements hidden)[0m[0m
        }
        [90m# (28 unchanged attributes hidden)[0m[0m
    }

[1mPlan:[0m 1 to add, 5 to change, 1 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
