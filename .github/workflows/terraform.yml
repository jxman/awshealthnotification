name: "Terraform CI/CD"

on:
  push:
    branches:
      - main
      - "feature/dev-*"
    paths:
      - "environments/**"
      - "modules/**"
      - ".github/workflows/**"
  pull_request:
    branches:
      - main
      - "feature/dev-*"
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: "Select environment"
        options:
          - prod
          - dev
        required: true
        default: "dev"

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  setup:
    name: "Setup and Validate"
    runs-on: ubuntu-22.04
    outputs:
      environment: ${{ steps.setenv.outputs.environment }}

    steps:
      - name: Set Environment
        id: setenv
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ENV="${{ github.event.inputs.environment }}"
          else
            ENV="dev"
          fi
          echo "environment=$ENV" >> $GITHUB_OUTPUT

  plan:
    name: "Terraform Plan"
    needs: setup
    runs-on: ubuntu-22.04
    environment:
      name: ${{ needs.setup.outputs.environment }}
      url: ${{ format('https://console.aws.amazon.com/sns/v3/home?region=us-east-1#/topics') }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform Environment
        uses: ./.github/actions/terraform-setup
        with:
          environment: ${{ needs.setup.outputs.environment }}
          aws-access-key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          tf-state-bucket: ${{ secrets.TF_STATE_BUCKET }}
          tf-state-lock-table: ${{ secrets.TF_STATE_LOCK_TABLE }}
          notification-email: ${{ secrets[format('{0}_NOTIFICATION_EMAIL', needs.setup.outputs.environment)] }}
          notification-phone: ${{ secrets[format('{0}_NOTIFICATION_PHONE', needs.setup.outputs.environment)] }}

      - name: Terraform Init
        working-directory: environments/${{ needs.setup.outputs.environment }}
        run: terraform init -backend-config=../../backend/${{ needs.setup.outputs.environment }}.hcl

      - name: Terraform Plan
        id: plan
        working-directory: environments/${{ needs.setup.outputs.environment }}
        run: |
          terraform plan -input=false -no-color -out=plan.tfplan
          terraform show -no-color plan.tfplan > plan.txt

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ needs.setup.outputs.environment }}
          path: |
            environments/${{ needs.setup.outputs.environment }}/plan.tfplan
            environments/${{ needs.setup.outputs.environment }}/plan.txt
          retention-days: 1

  apply:
    name: "Terraform Apply"
    needs: [setup, plan]
    runs-on: ubuntu-22.04
    environment:
      name: ${{ needs.setup.outputs.environment }}
      url: ${{ format('https://console.aws.amazon.com/sns/v3/home?region=us-east-1#/topics') }}
    if: |
      github.event_name == 'workflow_dispatch' || 
      github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform Environment
        uses: ./.github/actions/terraform-setup
        with:
          environment: ${{ needs.setup.outputs.environment }}
          aws-access-key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          tf-state-bucket: ${{ secrets.TF_STATE_BUCKET }}
          tf-state-lock-table: ${{ secrets.TF_STATE_LOCK_TABLE }}
          notification-email: ${{ secrets[format('{0}_NOTIFICATION_EMAIL', needs.setup.outputs.environment)] }}
          notification-phone: ${{ secrets[format('{0}_NOTIFICATION_PHONE', needs.setup.outputs.environment)] }}

      - name: Terraform Init
        working-directory: environments/${{ needs.setup.outputs.environment }}
        run: terraform init -backend-config=../../backend/${{ needs.setup.outputs.environment }}.hcl

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan-${{ needs.setup.outputs.environment }}
          path: environments/${{ needs.setup.outputs.environment }}

      - name: Terraform Apply
        working-directory: environments/${{ needs.setup.outputs.environment }}
        run: terraform apply -auto-approve plan.tfplan
