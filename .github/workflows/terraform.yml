name: "Terraform CI/CD"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: "Select environment"
        options: ["dev", "prod"]
        required: true
        default: "dev"

permissions:
  contents: read
  pull-requests: write

env:
  AWS_REGION: "us-east-1"

jobs:
  plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.1"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform Files
        working-directory: environments/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
        run: |
          # Debug current values
          echo "Environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}"

          # Create backend config
          cat > ../../backend.hcl << EOF
          bucket         = "${{ secrets.TF_STATE_BUCKET }}"
          key            = "health-notifications/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}/terraform.tfstate"
          region         = "${{ env.AWS_REGION }}"
          dynamodb_table = "${{ secrets.TF_STATE_LOCK_TABLE }}"
          encrypt        = true
          EOF

          # Create tfvars with array format for subscriptions
          cat > terraform.tfvars << EOF
          aws_region                     = "${{ env.AWS_REGION }}"
          environment                    = "${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}"
          email_addresses                = ${{ secrets[format('{0}_NOTIFICATION_EMAIL', github.event_name == 'workflow_dispatch' && inputs.environment || 'dev')] }}
          phone_numbers                  = ${{ secrets[format('{0}_NOTIFICATION_PHONE', github.event_name == 'workflow_dispatch' && inputs.environment || 'dev')] }}
          terraform_state_bucket         = "${{ secrets.TF_STATE_BUCKET }}"
          terraform_state_key            = "health-notifications/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}/terraform.tfstate"
          terraform_state_dynamodb_table = "${{ secrets.TF_STATE_LOCK_TABLE }}"
          tags = {
            Environment = "${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}"
            Service     = "aws-health-notifications"
            ManagedBy   = "terraform"
          }
          EOF

          # Debug generated files
          echo "Backend config:"
          cat ../../backend.hcl
          echo "Terraform vars (with masked values):"
          cat terraform.tfvars | sed 's/\(email_addresses.*=\).*/\1 [***]/g; s/\(phone_numbers.*=\).*/\1 [***]/g'

      - name: Terraform Init
        working-directory: environments/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
        run: terraform init -backend-config=../../backend.hcl

      - name: Terraform Plan
        working-directory: environments/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
        run: terraform plan -out=plan.tfplan

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: environments/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}/plan.tfplan
          retention-days: 5

  apply:
    name: "Terraform Apply"
    needs: plan
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
      url: ${{ format('https://console.aws.amazon.com/sns/v3/home?region={0}#/topics', env.AWS_REGION) }}
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.1"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform Files
        working-directory: environments/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
        run: |
          cat > ../../backend.hcl << EOF
          bucket         = "${{ secrets.TF_STATE_BUCKET }}"
          key            = "health-notifications/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}/terraform.tfstate"
          region         = "${{ env.AWS_REGION }}"
          dynamodb_table = "${{ secrets.TF_STATE_LOCK_TABLE }}"
          encrypt        = true
          EOF

          cat > terraform.tfvars << EOF
          aws_region                     = "${{ env.AWS_REGION }}"
          environment                    = "${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}"
          email_addresses                = ${{ secrets[format('{0}_NOTIFICATION_EMAIL', github.event_name == 'workflow_dispatch' && inputs.environment || 'dev')] }}
          phone_numbers                  = ${{ secrets[format('{0}_NOTIFICATION_PHONE', github.event_name == 'workflow_dispatch' && inputs.environment || 'dev')] }}
          terraform_state_bucket         = "${{ secrets.TF_STATE_BUCKET }}"
          terraform_state_key            = "health-notifications/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}/terraform.tfstate"
          terraform_state_dynamodb_table = "${{ secrets.TF_STATE_LOCK_TABLE }}"
          tags = {
            Environment = "${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}"
            Service     = "aws-health-notifications"
            ManagedBy   = "terraform"
          }
          EOF

      - name: Terraform Init
        working-directory: environments/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
        run: terraform init -backend-config=../../backend.hcl

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tf-plan
          path: environments/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}

      - name: Terraform Apply
        working-directory: environments/${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'dev' }}
        run: terraform apply -auto-approve plan.tfplan
